$bp-largest: 75em; // 1200px
$bp-medium: 56.25em; //900px

@function setPosition($x, $y) {
  $start-x: 0;
  $end-x: 60vw;
  $steps-x: 50;
  $steps-x-value: (($start-x - $end-x) / $steps-x) * -1;

  $start-y: 0;
  $end-y: 20rem;
  $steps-y: 50;
  $steps-y-value: (($start-y - $end-y) / $steps-y) * -1;

  $x-list: ();
  $y-list: ();

  $nextval: $start-x;
  @while $nextval < $end-x {
    $x-list: append($x-list, $nextval);
    $nextval: $nextval + $steps-x-value;
  }

  $nextval: $start-y;
  @while $nextval < $end-y {
    $y-list: append($y-list, $nextval);
    $nextval: $nextval + $steps-y-value;
  }

  @return nth($x-list, $x), nth($y-list, $y);
}

@function decimal-round($number, $digits: 0) {
  $n: 1;
  @for $i from 1 through $digits {
    $n: $n * 10;
  }

  @return round($number * $n) / $n;
}

@function randomVList() {
  $x-maxsteps: 50;
  $y-maxsteps: 50;
  $x: random($x-maxsteps - 10);
  $y: random($y-maxsteps - 10);
  $list: ();
  $list: append($list, $x $y);
  $random-x-steps: random($x-maxsteps - 5) + 5;
  @while $x < $random-x-steps {
    $x: $x + 1;
    @if $y==$y-maxsteps {
      $y: $y + (random(2) - 2);
    } @else if $y==1 {
      $y: $y + (random(2) - 1);
    } @else {
      $y: $y + (random(3) - 2);
    }
    $list: append($list, $x $y);
  }
  @return $list;
}

@mixin animation($name, $tupleList) {
  @keyframes #{$name} {
    $steps: length($tupleList);
    @if $steps > 1 {
      @for $i from 0 to $steps {
        $percentage: decimal-round($i * (100/ ($steps - 1)), 2);
        #{$percentage + "%"} {
          $tuple: nth($tupleList, $i + 1);
          transform: translate(setPosition(nth($tuple, 1), nth($tuple, 2)));
        }
      }
      0% {
        opacity: 0;
      }
      15% {
        opacity: 1;
      }
      85% {
        opacity: 1;
      }
      100% {
        opacity: 0;
      }
    }
  }
}

@for $i from 1 to 12 {
  $randomlist: randomVList();
  @while length($randomlist) < 3 {
    $randomlist: randomVList();
  }
  @include animation("animation" + $i, $randomlist);
}

@for $i from 1 to 12 {
  .tools-used__icon#{$i} {
    $position: setPosition(random(1), random(10));
    left: nth($position, 1);
    top: nth($position, 2);
    $duration: 15 + random(5);
    animation: animation#{$i} linear #{$duration}s infinite;
    height: 5rem;
    width: auto;
    background-color: #fff;
  }
}

.tools-used {
  height: 40rem;
  margin: 2rem;
  overflow: hidden;
  margin: 0 auto;
  background: #fff;
  position: relative;
  display: flex;
  justify-content: space-between;

  div {
    position: absolute;
    opacity: 0;
    overflow: visible;
    background-size: contain;
  }

  &__set-icons {
    height: 5rem;
    width: 5rem;
  }
}
